import { MaybeRef, MaybeRefOrGetter, Ref, ShallowRef } from 'vue';
import { TresControl, TresScene } from '../../types';
import { RendererOptions, UseRendererManagerReturn } from '../useRenderer/useRendererManager';
import { UseCameraReturn } from '../useCamera/';
import { SizesType } from '../useSizes';
import { useEventManager } from '../useEventManager';
export interface TresContext {
    scene: ShallowRef<TresScene>;
    sizes: SizesType;
    extend: (objects: any) => void;
    camera: UseCameraReturn;
    controls: Ref<TresControl | null>;
    renderer: UseRendererManagerReturn;
    events: ReturnType<typeof useEventManager>;
}
export declare const INJECTION_KEY = "useTres";
declare const useTresContextProvider: (args_0: {
    scene: TresScene;
    canvas: MaybeRef<HTMLCanvasElement>;
    windowSize: MaybeRefOrGetter<boolean>;
    rendererOptions: RendererOptions;
}) => TresContext;
declare const useTresContext: () => TresContext;
export { useTresContext, useTresContextProvider };
