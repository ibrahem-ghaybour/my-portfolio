import { PointerEvent } from '@pmndrs/pointer-events';
export declare const supportedPointerEvents: readonly ["onClick", "onContextmenu", "onPointermove", "onPointerenter", "onPointerleave", "onPointerover", "onPointerout", "onDblclick", "onPointerdown", "onPointerup", "onPointercancel", "onLostpointercapture", "onWheel"];
export type SupportedVuePointerEvent = typeof supportedPointerEvents[number];
export type TresPointerEventName = 'click' | 'contextmenu' | 'pointermove' | 'pointerenter' | 'pointerleave' | 'pointerover' | 'pointerout' | 'dblclick' | 'pointerdown' | 'pointerup' | 'pointercancel' | 'lostpointercapture' | 'wheel';
export declare const pointerEventsMapVueToThree: Record<SupportedVuePointerEvent, TresPointerEventName>;
export declare const isSupportedPointerEvent: (event: string) => event is SupportedVuePointerEvent;
export type TresPointerEvent = PointerEvent<MouseEvent>;
export type PointerEventHandlers = {
    [key in SupportedVuePointerEvent]: (event: TresPointerEvent) => void;
};
