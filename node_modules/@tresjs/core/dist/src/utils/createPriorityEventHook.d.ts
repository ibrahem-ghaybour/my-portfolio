import { EventHookOff, EventHookTrigger } from '@vueuse/core';
export type Callback<T> = Parameters<EventHookOff<T>>[0];
export type PriorityEventHookOn<T> = (fn: Callback<T>, priority?: number) => {
    off: () => void;
};
export type PriorityEventHookOff<T> = EventHookOff<T>;
export type PriorityEventHookTrigger<T> = EventHookTrigger<T>;
export interface PriorityEventHook<T = any> {
    on: PriorityEventHookOn<T>;
    off: (fn: Callback<T>) => void;
    trigger: PriorityEventHookTrigger<T>;
    dispose: () => void;
    count: number;
}
export declare function createPriorityEventHook<T>(): PriorityEventHook<T>;
