export type DevtoolsMessageType = 'performance' | 'context' | 'asset-load';
export interface AssetLoadData {
    url: string;
    type: string;
    loaded: boolean;
    size: number;
    asset: HTMLImageElement | HTMLScriptElement | HTMLLinkElement | Blob | ArrayBuffer | null;
}
export interface DevtoolsMessage<T = any> {
    type: DevtoolsMessageType;
    data: T;
    timestamp?: number;
}
export type DevtoolsSubscriber = (message: DevtoolsMessage) => void;
/**
 * Messenger class for communicating with Tres DevTools
 * This class will be attached to window.__TRES__DEVTOOLS__
 */
export declare class DevtoolsMessenger {
    private subscribers;
    private messageQueue;
    private maxQueueSize;
    /**
     * Send a message to devtools subscribers
     * If no subscribers are available, only queueable message types are queued
     */
    send<T>(type: DevtoolsMessageType, data: T): void;
    /**
     * Queue a message for later delivery
     */
    private queueMessage;
    /**
     * Flush all queued messages to current subscribers
     */
    private flushQueue;
    /**
     * Subscribe to devtools messages
     * When a new subscriber is added, all queued messages (asset-load events) are immediately delivered
     */
    subscribe(subscriber: DevtoolsSubscriber): () => void;
    /**
     * Check if there are any subscribers
     */
    get hasSubscribers(): boolean;
    /**
     * Get the current queue size
     */
    get queueSize(): number;
    /**
     * Clear all queued messages
     */
    clearQueue(): void;
}
